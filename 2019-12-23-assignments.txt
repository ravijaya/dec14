Write a shell script to Store the output of the command “hostname” in a variable. Display “This script is running on _.” where “_” is the output of the “hostname” command.


Write a shell script to check to see if the file “file_path” exists. If it does exist, display “file_path passwords are enabled.” Next, check to see if you can write to the file. If you can, display “You have permissions to edit “file_path.””If you cannot, display “You do NOT have permissions to edit “file_path””
Hint: file test operator


Write a shell script that displays “man”,”bear”,”pig”,”dog”,”cat”,and “sheep” on the screen with each appearing on a separate line. Try to do this in as few lines as possible.

Hint: use for in

write a shell script that prompts the user for a name of a file or directory and reports if it is a regular file, a directory, or another type of file. Also perform an ls command against the file or directory with the long listing option

Hint : File test operator 


Modify the previous script to that it accepts the file or directory name as an argument instead of prompting the user to enter it.
Hint: command line arguments

Modify the previous script to accept an unlimited number of files and directories as arguments.
Hint: command line arguments

Write a shell script that displays, “This script will exit with 0 exit status.” Be sure that the script does indeed exit with a 0 exit status.

Hint: exit status


Write a shell script that accepts a file or directory name as an argument. Have the script report if it is reguler file, a directory, or another type of file. If it is a directory, exit with a 1 exit status. If it is some other type of file, exit with a 2 exit status.

Hint: exit status

Write a script that executes the command “cat /etc/shadow”. If the command return a 0 exit status, report “command succeeded” and exit with a 0 exit status. If the command returns a non-zero exit status, report “Command failed” and exit with a 1 exit status.


Write a shell script to displays the number of files in the present working directory.

Write the shell script that renames all files in the current directory that end in “.jpg” to begin with today’s date in the following format: YYYY-MM-DD. For example, if a picture of my cat was in the current directory and today was October 31,2016 it would change name from “mycat.jpg” to “2016–10–31-mycat.jpg”.

Hint: for in loop


Write the shell script that displays one random number on the screen and also generates a system log message with that random number.Use the “user” facility and “info” facility for your messages.
Solution: 

#!/bin/bash
MESSAGE="Random number is:$RANDOM"
echo "$MESSAGE"
logger -p user.info "$MESSAGE"


